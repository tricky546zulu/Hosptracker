# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/inspectionProfiles/profiles_settings.xml
#  - .idea/inspectionProfiles/Project_Default.xml
#  - .idea/misc.xml
#  - .idea/modules.xml
#  - .idea/runConfigurations.xml
#  - .idea/vcs.xml
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/dictionaries
#  - .idea/shelf
#  - .idea/dataSources.ids
#  - .idea/dataSources.local.xml
#  - .idea/sqlDataSources.xml
#  - .idea/dynamic.xml
#  - .idea/uiDesigner.xml
#  - .idea/gradle.xml
#  - .idea/libraries
#  - .idea/jarRepositories.xml
#  - .idea/compiler.xml
#  - .idea/libraries/
#  - .idea/artifacts/
#  - .idea/caches/
#  - .idea/modules/
#  - .idea/other.xml
#  - .idea/runConfigurations/
#  - .idea/scopes/
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/usage.statistics.xml
#  - .idea/shelf/
#  - .idea/aws.xml
#  - .idea/contentModel.xml
#  - .idea/dataSources.ids
#  - .idea/dataSources.local.xml
#  - .idea/dataSources.xml
#  - .idea/dbnavigator.xml
#  - .idea/deployment.xml
#  - .idea/encodings.xml
#  - .idea/findbugs-idea.xml
#  - .idea/gradle.xml
#  - .idea/inspectionProfiles/
#  - .idea/jsLibraryMappings.xml
#  - .idea/libraries/
#  - .idea/markdown-navigator.xml
#  - .idea/markdown-navigator/
#  - .idea/misc.xml
#  - .idea/modules.xml
#  - .idea/php.xml
#  - .idea/runConfigurations.xml
#  - .idea/saveactions_settings.xml
#  - .idea/sqldialects.xml
#  - .idea/uiDesigner.xml
#  - .idea/vcs.xml
#  - .idea/webContexts.xml
#  - .idea/workspace.xml
.idea/

# VS Code
.vscode/

# Database files
*.db
*.sqlite
*.sqlite3

# Environment variables
.env
.env.local
.env.production

# Logs
logs/
*.log

# Temporary files
tmp/
temp/
.tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
instance/
attached_assets/